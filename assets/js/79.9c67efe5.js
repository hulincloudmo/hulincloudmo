(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{390:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("code-splitting\n")]),t._v(" "),s("h2",{attrs:{id:"当你使用比较大的库时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当你使用比较大的库时","aria-hidden":"true"}},[t._v("#")]),t._v(" 当你使用比较大的库时")]),t._v(" "),s("p",[t._v("比如你使用lodash时，如果你没有配置lodash的代码分割，你打包出来的文件可能是这样的。")]),t._v(" "),s("p",[s("code",[t._v("main.js 1.38 MiB main [emitted] main")])]),t._v(" "),s("p",[t._v("打包出来的大小已经达到了1.38MB")]),t._v(" "),s("h2",{attrs:{id:"将公用的包进行拆分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将公用的包进行拆分","aria-hidden":"true"}},[t._v("#")]),t._v(" 将公用的包进行拆分")]),t._v(" "),s("p",[t._v("当我们没有使用代码分割时，如果你的业务代码发生了变化，那么lodash库和业务代码都需要重新请求，如果业务代码有1MB，那么每次都需要重新加载2MB的文件，这显然是不合理的！！！")]),t._v(" "),s("h3",{attrs:{id:"同步代码的代码分割"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步代码的代码分割","aria-hidden":"true"}},[t._v("#")]),t._v(" 同步代码的代码分割")]),t._v(" "),s("p",[t._v("同步代码webpack是不能自动代码分割的，需要我们做一些"),s("code",[t._v("小动作")])]),t._v(" "),s("p",[t._v("在webpack的配置文件中")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('splitChunks: {\n            chunks: "all", // async：代码分隔只对异步代码生效\n            minSize: 0, // 需要做代码分隔的最小字节 1000字节=1kb\n            minChunks: 1, // 文件使用了多少次才会进行分隔\n            maxAsyncRequests: 5, // 最大分隔文件数\n            maxInitialRequests: 3, // 首页（入口）最大的分割数\n            automaticNameDelimiter: \'~\',\n            name: true,\n            cacheGroups: { // 分隔条件判断，满足才会分隔\n                vendors: {\n                    test: /[\\\\/]node_modules[\\\\/]/, // 满足此条件的打包规则\n                    priority: -10, // 打包优先级 （当文件同时满足default和vendor条件时）\n                    // filename: "vendor.js"\n                },\n                default: {\n                    // minChunks: 2,\n                    priority: -20,\n                    reuseExistingChunk: true,\n                    // filename: "common.js"\n                }\n            }\n        }\n')])])]),s("h3",{attrs:{id:"异步代码的代码分割"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步代码的代码分割","aria-hidden":"true"}},[t._v("#")]),t._v(" 异步代码的代码分割")]),t._v(" "),s("p",[t._v("异步代码在webpack中会自动进行代码分割，啥都不用做就会进行代码分割啦！！")]),t._v(" "),s("h2",{attrs:{id:"优化你的代码性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化你的代码性能","aria-hidden":"true"}},[t._v("#")]),t._v(" 优化你的代码性能")]),t._v(" "),s("ol",[s("li",[t._v("magic-commend")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackPrefetch:true */")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("webpackPrefetch会将你的代码变成在网络空闲的时候去加载，也就是整个网站都已经加载完毕了，才会去加载这些文件，比如说首页中进入的登录框就可以做成这样的效果")]),t._v(" "),s("h2",{attrs:{id:"css代码分割"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css代码分割","aria-hidden":"true"}},[t._v("#")]),t._v(" css代码分割")])])}),[],!1,null,null,null);a.default=e.exports}}]);